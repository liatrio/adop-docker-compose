#!/bin/bash -e

SUB_CMD_NAME="test"

cmd_desc() {
    echo "For confirming LDOP functionality during development."
}

cmd_usage() {
    echo "usage: ${CMD_NAME} ${SUB_CMD_NAME} <subcommand>"
}

help() {
    cmd_usage
    echo
    echo "Available subcommands are:"
    printf "    %-20s   %s\n" "clean" "Test functionality given a clean environment."
    printf "    %-20s   %s\n" "help" "Prints this help information"
    echo
}

clean() {
  echo
  echo "#######################"
  echo "# Testing in Progress #"
  echo "#######################"
  echo
  sleep 1

  #./cmd/compose down --volumes
  #./cmd/compose init --without-load --without-pull

  JOB_URL=localhost/jenkins/job/Load_Platform
  GREP_RETURN_CODE=0

  source ${CONF_DIR}/conf/env.provider.sh
  source ${CONF_DIR}/credentials.generate.sh
  source ${CONF_DIR}/env.config.sh

  # Start the build
  curl -s --data '' jenkins:${PASSWORD_JENKINS}@$JOB_URL/buildWithParameters

  # Poll every thirty seconds until the build is finished
  while [ $GREP_RETURN_CODE -eq 0 ]
  do
    sleep 15
    # Grep will return 0 while the build is running:
    curl -s jenkins:${PASSWORD_JENKINS}@$JOB_URL/lastBuild/api/python?pretty=true | grep -n "result\" : None"
    GREP_RETURN_CODE=$?
  done

  echo
  echo "#######################"
  echo "#  Testing Complete   #"
  echo "#######################"
  echo
}

shift $(($OPTIND -1))
SUBCOMMAND_OPT="${1:-help}"

# Only shift if there are other parameters
if [ $# -ge 1 ]; then
    shift
fi

if [ ! -z ${SUBCOMMAND_OPT} ]; then
  case ${SUBCOMMAND_OPT} in
    "cmd_desc"|"help")
        ${SUBCOMMAND_OPT}
        ;;
    "clean")
        clean
        ;;
    *)
        echo "Invalid subcommand."
        help
        exit 1
        ;;
  esac
fi
